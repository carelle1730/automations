version: 0.2
phases:

  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws --version
      - $(aws ecr get-login --region $AWS_DEFAULTREGION --no-include-email)
      - REPOSITORY_URI= 
      - git config --global credentials.helper 'store'
      - cat ~/.gitconfig
      - cat ~/.git-credentials
      - ASSUME_ROLE_ARN="arn:aws:iam::700523735250:role/pipelineassumerole"
      - TEMP_ROLE=$(aws sts assume-role --role-arn $ASSUME_ROLE_ARN)
      - export TEMP_ROLE
      - export AWS_ACCESS_KEY_ID=$(echo "${TEMP_ROLE}" | jq -r '.Credentials.AccessKeyId')
      - export AWS_SECRET_ACCESS_KEY=$(echo "${TEMP_ROLE}" | jq -r '.Credentials.SecretAccessKey')
      - export AWS_SESSION_TOKEN=$(echo "${TEMP_ROLE}" | jq -r '.Credentials.SessionToken')
      - echo install step...
      - echo logging in to AWS ECR...
      - $(aws ecr get-login --no-include-email --region us-east-1)
  build:
    commands:
      - echo build Docker image on `date`
      - cd src
      - docker build -t codebuildapp:latest .
      - docker tag codebuildapp:latest <700523735250.dkr.ecr.us-east-1.amazonaws.com/codebuildapp>/codebuildapp:latest
  post_build:
    commands:
      - echo build Docker image complete `date`
      - echo push latest Docker images to ECR...
      - docker push <700523735250.dkr.ecr.us-east-1.amazonaws.com/codebuildapp>/codebuildapp:latest
